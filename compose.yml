################################################################################
# Docker Compose file for starting up the service for testing in GitHub workflow
# This template provides comparable infrastructure to the real environment.
#   - mongodb
#   - redis
#   - localstack (s3, sqs, sns)
#
# Both mongo and localstack have init scripts included for setting up resources
# on startup. These scripts are in docker/scripts.
#
# It also includes a selenium-chrome container for running the browser headless.
#
# The services being tested can either be started up here using the latest
# builds from dockerhub.
# In the example each service has a .env config file in docker/config/
# Services can reference each other by their container names.
# e.g. http://cdp-example-node-backend:3001/
#
################################################################################
name: epr-re-ex-admin-frontend-tests

services:
  ################################################################################
  # Headless browser, used by the test suite to actually run the tests against the
  # containers.
  selenium-chrome:
    image: selenium/standalone-chrome:123.0
    ports:
      - 4444:4444
    network_mode: host

  ################################################################################
  localstack:
    image: localstack/localstack:3.2.0
    environment:
      - LOCALSTACK_HOST=127.0.0.1
      - SERVICES=s3,sqs,sns,dynamodb
      - LS_LOG=WARN
    env_file:
      - ./docker/config/defaults.env
    volumes:
      - ./docker/scripts/localstack:/etc/localstack/init/ready.d
    healthcheck:
      test: ["CMD", "curl", "localhost:4566"]
      interval: 5s
      start_period: 5s
      retries: 3

  ################################################################################
  redis:
    image: redis:7.2.11-alpine3.21
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "PING"]
      interval: 5s
      start_period: 2s
      retries: 5

  ################################################################################
  #
  # Add the services you want to test below.
  #
  ################################################################################
  epr-re-ex-admin-frontend:
    image: defradigital/epr-re-ex-admin-frontend:${EPR_RE_EX_ADMIN_FRONTEND:-latest}
    env_file:
      - ./docker/config/defaults.env
      - ./docker/config/example-frontend.env
    environment:
      PORT: 3002
      NODE_ENV: development
      REDIS_HOST: redis
      LOCALSTACK_ENDPOINT: http://localstack:4566
      EPR_BACKEND_URL: http://epr-backend:3001
      ENTRA_TENANT_ID: tenantId
      ENTRA_CLIENT_ID: clientId
      ENTRA_CLIENT_SECRET: test
      OIDC_WELL_KNOWN_CONFIGURATION_URL: http://epr-re-ex-entra-stub:3010/.well-known/openid-configuration
      USE_SINGLE_INSTANCE_CACHE: true
    depends_on:
      redis:
        condition: service_healthy
      epr-re-ex-entra-stub:
        condition: service_healthy
    ports:
      - 3002:3002
    healthcheck:
      test: ["CMD", "curl", "http://localhost:3002/health"]
      interval: 3s
      start_period: 2s
      retries: 3

  epr-re-ex-entra-stub:
    image: defradigital/epr-re-ex-entra-stub:latest
    ports:
      - 3010:3010
    environment:
      STUB_INTERNAL_URL: http://epr-re-ex-entra-stub:3010
    healthcheck:
      test: ["CMD", "curl", "http://localhost:3010/health"]
      interval: 3s
      start_period: 2s
      retries: 3

  mongodb:
    image: mongo:6.0.13
    restart: always
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 5s
      retries: 3

  epr-backend:
    image: defradigital/epr-backend:${EPR_BACKEND:-latest}
    links:
      - 'localstack:localstack'
      - 'mongodb:mongodb'
    depends_on:
      localstack:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    env_file:
      - ./docker/config/defaults.env
    environment:
      PORT: 3001
      NODE_ENV: development
      LOCALSTACK_ENDPOINT: http://localstack:4566
      MONGO_URI: mongodb://mongodb:27017/
      GOVUK_NOTIFY_API_KEY: fake-key-for-testing
      AUDIT_ENABLED: false
      FEATURE_FLAG_SUMMARY_LOGS: true
      FEATURE_FLAG_ORGANISATIONS: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 5s
      start_period: 10s
      retries: 5
